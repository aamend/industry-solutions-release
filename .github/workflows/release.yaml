name: Solution Accelerator Build
env:
  DB_TOKEN: ${{ secrets.DB_TOKEN }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_ACCESS_SECRET: ${{ secrets. AWS_ACCESS_SECRET }}

on:
  workflow_dispatch:
    inputs:
      repository_path:
        description: 'Repository path on E2 field eng'
        required: true
        default: '/Workspace/Repos/antoine.amend@databricks.com/esg-scoring'
      industry_vertical:
        description: 'Industry vertical, can be [fsi, cme, rcg, hls, mnf, cyb]'
        required: true
        default: 'fsi'
      solution_name:
        description: 'Code name of the solution'
        required: true
        default: 'esg_scoring'

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      # The first step is obviously to check out the repository
      - name: Checkout project
        uses: actions/checkout@v2

      # We test and package our code against python 3.9 distribution
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

        # we create our own pip cache where dependencies from requirements.txt will be stored
      - name: Configure Python
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            ${{ runner.os }}-pip-

        # Let's install pip and make sure we run against latest version
      - name: Install pip
        run: python -m pip install --upgrade pip

        # And install any dependency required for unit testing
      - name: Install dependencies
        run: pip install -U -r requirements.txt

        # Package and publish solution
      - name: Publish solution accelerator
        run: python databricks.py --vertical ${{ github.event.inputs.industry_vertical }} --path ${{ github.event.inputs.repository_path }} --name ${{ github.event.inputs.solution_name }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist/${{ github.event.inputs.solution_name }}'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4