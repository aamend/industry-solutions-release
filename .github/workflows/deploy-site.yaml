name: deploy-solution-sites
env:
  DB_TOKEN: ${{ secrets.DB_TOKEN }}
  DB_HOST: ${{ secrets.DB_HOST }}
  GH_TOKEN: ${{ github.token }}

on:
  workflow_dispatch:
    inputs:
      repository_path:
        description: 'Repository path on [$DB_HOST] environment'
        required: true
      solution_name:
        description: 'Code name of the solution accelerator'
        required: true

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout project
        uses: actions/checkout@v2

      - name: Configure git
        run: |
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global user.name "$(gh api /users/${GITHUB_ACTOR} | jq .name -r)"

      - name: Retrieve latest site
        run: |
          git subtree split --prefix site/ -b gh-pages
          git push -f origin gh-pages:gh-pages
          git branch -D gh-pages

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

      - name: Configure Python
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            ${{ runner.os }}-pip-

      - name: Install pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -U -r requirements.txt

      - name: Publish solution accelerator
        run: python databricks.py --path ${{ github.event.inputs.repository_path }} --name ${{ github.event.inputs.solution_name }}

      - name: Deploy solution to github page
        run: |
          git add .
          git commit -a -m "Adding solution [${{ github.event.inputs.solution_name }}]"
          git push
          git subtree push --prefix site/ origin gh-pages